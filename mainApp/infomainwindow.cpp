#include "infomainwindow.h"
#include "ui_infomainwindow.h"

InfoMainWindow::InfoMainWindow(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::InfoMainWindow)
{
    ui->setupUi(this);

    // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
    setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
    resize(700, 600);

    // –°–æ–∑–¥–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º QCustomPlot
    customPlot = new QCustomPlot(this);
    ui->verticalLayout->addWidget(customPlot);

    // –°–æ–∑–¥–∞–µ–º QScrollArea –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
    QScrollArea *scrollArea = new QScrollArea(this);
    int textHeight = this->height() * 0.3; // 30% –æ—Ç –≤—ã—Å–æ—Ç—ã –æ–∫–Ω–∞
    scrollArea->setMinimumHeight(textHeight);
    scrollArea->setMaximumHeight(textHeight);

    scrollArea->setWidgetResizable(true);
    scrollArea->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);

    // –°–æ–∑–¥–∞–µ–º QLabel –¥–ª—è —Ç–µ–∫—Å—Ç–∞
    footerLabel = new QLabel();
    footerLabel->setWordWrap(true);
    footerLabel->setAlignment(Qt::AlignLeft | Qt::AlignTop);
    footerLabel->setStyleSheet("QLabel { color: gray; font-size: 10pt; padding: 5px; }");
    footerLabel->setTextInteractionFlags(Qt::TextSelectableByMouse);

    // –ü–æ–º–µ—â–∞–µ–º QLabel –≤ QScrollArea
    scrollArea->setWidget(footerLabel);

    // –î–æ–±–∞–≤–ª—è–µ–º QScrollArea –≤ layout
    ui->verticalLayout->addWidget(scrollArea);


    setFooterText(
        "üìä –ö–∞–∫ —á–∏—Ç–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫:\n\n"

        "üîµ –£—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è:\n"
        "   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ (–Ω–∏–∂–Ω—è—è –ª–∏–Ω–∏—è) - —Ü–µ–Ω–∞ –∫–∞–∫ –±—ã '–æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è' –æ—Ç —ç—Ç–æ–π –∑–æ–Ω—ã –≤–≤–µ—Ä—Ö\n"
        "   - –°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ (–≤–µ—Ä—Ö–Ω—è—è –ª–∏–Ω–∏—è) - —Ü–µ–Ω–∞ '—Å–ø–æ—Ç—ã–∫–∞–µ—Ç—Å—è' –æ–± —ç—Ç—É –∑–æ–Ω—É –∏ –ø–∞–¥–∞–µ—Ç\n"
        "   –ü—Ä–∏–º–µ—Ä: –ï—Å–ª–∏ —Ü–µ–Ω–∞ 3 —Ä–∞–∑–∞ –Ω–µ –º–æ–≥–ª–∞ –ø—Ä–æ–±–∏—Ç—å $50 - —ç—Ç–æ —Å–∏–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ\n\n"

        "üìà MACD - –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç—Ä–µ–Ω–¥–∞ –∏ –º–æ–º–µ–Ω—Ç—É–º–∞:\n"
        "   1. –°–∏–Ω—è—è –ª–∏–Ω–∏—è (MACD): –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É 12-–¥–Ω–µ–≤–Ω–æ–π –∏ 26-–¥–Ω–µ–≤–Ω–æ–π —Å–∫–æ–ª—å–∑—è—â–∏–º–∏ —Å—Ä–µ–¥–Ω–∏–º–∏\n"
        "      –§–æ—Ä–º—É–ª–∞: MACD = EMA(12) - EMA(26)\n"
        "   2. –û—Ä–∞–Ω–∂–µ–≤–∞—è –ª–∏–Ω–∏—è (Signal): –°–≥–ª–∞–∂–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∏–Ω–µ–π –ª–∏–Ω–∏–∏\n"
        "      –§–æ—Ä–º—É–ª–∞: Signal = EMA(MACD –∑–∞ 9 –¥–Ω–µ–π)\n"
        "   3. –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞: –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å–∏–Ω–µ–π –∏ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –ª–∏–Ω–∏—è–º–∏\n"
        "      –ß–µ–º –≤—ã—à–µ —Å—Ç–æ–ª–±–∏–∫–∏ - —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ —Ç—Ä–µ–Ω–¥\n\n"

        "üìä RSI - –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏/–ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏:\n"
        "   - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å–∫–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤ '–ø–µ—Ä–µ–≥—Ä–µ—Ç'\n"
        "   –§–æ—Ä–º—É–ª–∞: RSI = 100 - (100 / (1 + —Å—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç / —Å—Ä–µ–¥–Ω–µ–µ –ø–∞–¥–µ–Ω–∏–µ –∑–∞ 14 –¥–Ω–µ–π))\n"
        "   ‚Ä¢ –í—ã—à–µ 70 - –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç—å (–≤–æ–∑–º–æ–∂–µ–Ω —Å–ø–∞–¥)\n"
        "   ‚Ä¢ –ù–∏–∂–µ 30 - –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å (–≤–æ–∑–º–æ–∂–µ–Ω —Ä–æ—Å—Ç)\n\n"

        "üîÆ –ö–∞–∫ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã:\n"
        "‚ñ≤ –í–í–ï–†–• –µ—Å–ª–∏:\n"
        "   - MACD —Å–∏–Ω—è—è –ª–∏–Ω–∏—è –ü–ï–†–ï–°–ï–ö–ê–ï–¢ –æ—Ä–∞–Ω–∂–µ–≤—É—é –°–ù–ò–ó–£ –í–í–ï–†–•\n"
        "   - RSI –≤—ã—à–µ 30 (–Ω–æ –Ω–∏–∂–µ 70 - –∏–¥–µ–∞–ª—å–Ω–æ 40-60)\n"
        "   - –¶–µ–Ω–∞ –ø—Ä–æ–±–∏–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è\n\n"

        "‚ñº –í–ù–ò–ó –µ—Å–ª–∏:\n"
        "   - MACD —Å–∏–Ω—è—è –ª–∏–Ω–∏—è –ü–ï–†–ï–°–ï–ö–ê–ï–¢ –æ—Ä–∞–Ω–∂–µ–≤—É—é –°–í–ï–†–•–£ –í–ù–ò–ó\n"
        "   - RSI –Ω–∏–∂–µ 70 (–Ω–æ –≤—ã—à–µ 30 - –∏–¥–µ–∞–ª—å–Ω–æ 40-60)\n"
        "   - –¶–µ–Ω–∞ –ø—Ä–æ–±–∏–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n\n"

        "üí° –°–æ–≤–µ—Ç: –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å—Ä–∞–∑—É!"
        );
}

void InfoMainWindow::setFooterText(const QString &text)
{
    if(footerLabel) {
        footerLabel->setText(text);
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞
        footerLabel->adjustSize();
    }
}

InfoMainWindow::~InfoMainWindow()
{
    delete ui;
}

void InfoMainWindow::setInfo(const QString& title, const QString& message)
{
    setWindowTitle(title);
}


void InfoMainWindow::setMarketData(const QList<QList<QString>>& candlesData,
                                   double support,
                                   double resistance)
{
    // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
    qDebug() << "=== 4-Hour Candles Data ===";
    qDebug() << "Support level:" << support;
    qDebug() << "Resistance level:" << resistance;
    qDebug() << "Total 4-hour candles received:" << candlesData.size();

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    QVector<QCPFinancialData> financialData;
    QVector<double> timeKeys;
    double minPrice = std::numeric_limits<double>::max();
    double maxPrice = std::numeric_limits<double>::min();

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    for (int i = 0; i < candlesData.size(); ++i) {
        const QList<QString>& candle = candlesData[i];
        if (candle.size() >= 5) { // timestamp, open, high, low, close
            QCPFinancialData data;

            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º timestamp –∏–∑ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤ —Å–µ–∫—É–Ω–¥—ã (QCustomPlot –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ–∫—É–Ω–¥—ã)
            double timestamp = candle[0].toDouble() / 1000.0;
            data.key = timestamp;
            timeKeys.append(timestamp);

            data.open = candle[1].toDouble();
            data.high = candle[2].toDouble();
            data.low = candle[3].toDouble();
            data.close = candle[4].toDouble();

            financialData.append(data);

            // –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω/–º–∞–∫—Å –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
            minPrice = qMin(minPrice, candle[3].toDouble());
            maxPrice = qMax(maxPrice, candle[2].toDouble());
        }
    }

    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≥—Ä–∞—Ñ–∏–∫
    customPlot->clearPlottables();
    customPlot->clearItems();

    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ —Å–≤–µ—á–µ–π
    QCPFinancial *candlesticks = new QCPFinancial(customPlot->xAxis, customPlot->yAxis);
    candlesticks->setName("4-Hour Candles");
    candlesticks->setChartStyle(QCPFinancial::csCandlestick);
    candlesticks->data()->set(financialData);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–µ—á–µ–π
    candlesticks->setWidth(4*3600*0.7); // –®–∏—Ä–∏–Ω–∞ 4-—á–∞—Å–æ–≤–æ–π —Å–≤–µ—á–∏ (70% –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞)
    candlesticks->setTwoColored(true);
    candlesticks->setBrushPositive(QColor(0, 150, 0));
    candlesticks->setBrushNegative(QColor(150, 0, 0));
    candlesticks->setPenPositive(QPen(QColor(0, 100, 0)));
    candlesticks->setPenNegative(QPen(QColor(100, 0, 0)));

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–∏ X –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏

    QSharedPointer<QCPAxisTickerDateTime> dateTicker(new QCPAxisTickerDateTime);
    dateTicker->setDateTimeFormat("dd.MM.yy\nhh:mm"); // –§–æ—Ä–º–∞—Ç: –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º
    customPlot->xAxis->setTicker(dateTicker);
    customPlot->xAxis->setLabel("–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è");
    customPlot->yAxis->setLabel("–¶–µ–Ω–∞");

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Å –Ω–µ–±–æ–ª—å—à–∏–º –∑–∞–ø–∞—Å–æ–º
    double priceRange = maxPrice - minPrice;
    customPlot->yAxis->setRange(minPrice - priceRange*0.05, maxPrice + priceRange*0.05);

    if (!timeKeys.isEmpty()) {
        customPlot->xAxis->setRange(timeKeys.first() - 4*3600, timeKeys.last() + 4*3600);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è
    if (!qIsNaN(support)) {
        QCPItemStraightLine *supportLine = new QCPItemStraightLine(customPlot);
        supportLine->point1->setCoords(timeKeys.first(), support);
        supportLine->point2->setCoords(timeKeys.last(), support);
        supportLine->setPen(QPen(QColor(0, 0, 255), 1, Qt::DashLine));

        QCPItemText *supportText = new QCPItemText(customPlot);
        supportText->position->setCoords(timeKeys.last(), support);
        supportText->setText(QString("Support: %1").arg(support, 0, 'f', 2));
        supportText->setPositionAlignment(Qt::AlignRight|Qt::AlignVCenter);
    }

    if (!qIsNaN(resistance)) {
        QCPItemStraightLine *resistanceLine = new QCPItemStraightLine(customPlot);
        resistanceLine->point1->setCoords(timeKeys.first(), resistance);
        resistanceLine->point2->setCoords(timeKeys.last(), resistance);
        resistanceLine->setPen(QPen(QColor(255, 0, 0), 1, Qt::DashLine));

        QCPItemText *resistanceText = new QCPItemText(customPlot);
        resistanceText->position->setCoords(timeKeys.last(), resistance);
        resistanceText->setText(QString("Resistance: %1").arg(resistance, 0, 'f', 2));
        resistanceText->setPositionAlignment(Qt::AlignRight|Qt::AlignVCenter);
    }

    // –í–∫–ª—é—á–∞–µ–º –ª–µ–≥–µ–Ω–¥—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫
    customPlot->legend->setVisible(true);
    customPlot->replot();

    // –í—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Å—à—Ç–∞–±–∞—Ö
    qDebug() << "Price range:" << minPrice << "-" << maxPrice;
    if (!timeKeys.isEmpty()) {
        qDebug() << "Time range:" << QDateTime::fromSecsSinceEpoch(timeKeys.first()).toString()
        << "-" << QDateTime::fromSecsSinceEpoch(timeKeys.last()).toString();
    }
}
// void InfoMainWindow::setupCandlestickChart()
// {
//     // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–∏–º–µ—Ä)
//     QVector<QCPFinancialData> data;
//     data << QCPFinancialData(1, 10, 13, 9, 11);  // time, open, high, low, close
//     data << QCPFinancialData(2, 11, 15, 10, 14);
//     data << QCPFinancialData(3, 14, 16, 12, 13);
//     data << QCPFinancialData(4, 13, 14, 11, 12);
//     data << QCPFinancialData(5, 12, 13, 9, 10);

//     // –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å–≤–µ—á–µ–π
//     QCPFinancial *candlesticks = new QCPFinancial(customPlot->xAxis, customPlot->yAxis);
//     candlesticks->setName("Candlesticks");
//     candlesticks->setChartStyle(QCPFinancial::csCandlestick);
//     candlesticks->data()->set(data);

//     // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤
//     candlesticks->setWidth(0.5);
//     candlesticks->setTwoColored(true);
//     candlesticks->setBrushPositive(QColor(0, 255, 0)); // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —Ä–æ—Å—Ç–∞
//     candlesticks->setBrushNegative(QColor(255, 0, 0)); // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –ø–∞–¥–µ–Ω–∏—è
//     candlesticks->setPenPositive(QPen(QColor(0, 180, 0)));
//     candlesticks->setPenNegative(QPen(QColor(180, 0, 0)));

//     // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–µ–π
//     customPlot->xAxis->setLabel("Time");
//     customPlot->yAxis->setLabel("Price");
//     customPlot->xAxis->setRange(0, 85); // –ü–æ–¥–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–¥ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
//     customPlot->yAxis->setRange(8, 17); // support resistance

//     // –í–∫–ª—é—á–∞–µ–º –ª–µ–≥–µ–Ω–¥—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫
//     customPlot->legend->setVisible(true);
//     customPlot->replot();
// }
